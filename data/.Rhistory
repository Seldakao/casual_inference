+ 0.05 * (`marital-status`=='Never-married')
- 0.123 * (sex=='Female')
+ 0.1 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
# create test variable with broken randomisation
df$test <- 0
df$test <- with(df, ifelse(age > 24 & age < 46, drawer(), 0))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.1 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.123 * (sex=='Female')
+ 0.1 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.1 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.123 * (sex=='Female')
+ 0.01 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.1 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.123 * (sex=='Female')
+ 0.0001 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.1 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.123 * (sex=='Female')
+ 0.0001 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
# create test variable with broken randomisation
df$test <- 0
# create test variable with broken randomisation
df$test <- 0
df$test <- with(df, ifelse(age > 24 & age < 46, drawer(), 0))
df$test
# create test variable with broken randomisation
df$test <- 0
df$test <- with(df, ifelse( (age > 24 & age < 46) | is.na(age), drawer(), 0))
df$test
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.1 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.123 * (sex=='Female')
+ 0.0001 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
rnorm(nrow(df), mean = 0, sd = 5)
sd(df$salary)
sd(df$salary, na.rm = T)
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.01 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.0001 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
sd(df$salary, na.rm = T)
summary(lm(spent ~ test, data = df))
sd(df$test)
mean(df$test)
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.001 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.000001 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test, data = df %>% filter(age > 24, age < 46)))
table(df$test)
table(df$test, df$age)
table(df$age, df$test)
drawer <- function(x) rbinom(len(x), 1, 0.5)
r_draw <- function(x) rnorm(1, mean = 0, sd = 5)
df
# create test variable with broken randomisation
df$test <- 0
df$test <- with(df, ifelse( (age > 24 & age < 46) | is.na(age), drawer(user_id), 0))
drawer <- function(x) rbinom(length(x), 1, 0.5)
r_draw <- function(x) rnorm(1, mean = 0, sd = 5)
# create test variable with broken randomisation
df$test <- 0
df$test <- with(df, ifelse( (age > 24 & age < 46) | is.na(age), drawer(user_id), 0))
df$test
table(df$age, df$test)
mean(df$test)
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.001 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.000001 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df %>% filter(age > 24, age < 46)))
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test, data = df %>% filter(age > 24, age < 46)))
pred_mod <- lm(spent ~ ., data = df %>% filter(!test) %>% select(-test))
summary(pred_mod)
df$pred_spent <- predict(pred_mod, df)
with(df, cor(spent, pred_spent))
with(df, cor(spent, pred_spent, na.rm=T))
plot(df$spent, df$pred_spent)
summary(lm(spent ~ test + pred_spent, data = df))
summary(lm(spent ~ test + pred_spent, data = df %>% filter(age > 24, age < 46)))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.001 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.01 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test, data = df %>% filter(age > 24, age < 46)))
pred_mod <- lm(spent ~ ., data = df %>% filter(!test) %>% select(-test))
summary(pred_mod)
df$pred_spent <- predict(pred_mod, df)
with(df, cor(spent, pred_spent))
pred_mod <- lm(spent ~ ., data = df %>% filter(!test) %>% select(-test, -pred_test))
pred_mod <- lm(spent ~ ., data = df %>% filter(!test) %>% select(-test, -pred_spent))
summary(pred_mod)
pred_mod <- lm(spent ~ ., data = df %>% filter(!test) %>% select(-test, -pred_spent, -user_id))
summary(pred_mod)
df$pred_spent <- predict(pred_mod, df)
with(df, cor(spent, pred_spent))
with(df %>% filter(!is.na(df$pred_spent)), cor(spent, pred_spent))
summary(lm(spent ~ test + pred_spent, data = df))
summary(lm(spent ~ test + pred_spent, data = df %>% filter(age > 24, age < 46)))
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test + pred_spent, data = df))
summary(lm(spent ~ test + pred_spent, data = df))
summary(lm(spent ~ test + pred_spent, data = df %>% filter(age > 24, age < 46)))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.001 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.01 * test
+ rnorm(nrow(df), mean = 0, sd = 5)
)
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test, data = df %>% filter(age > 24, age < 46)))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent <- with(df,
0.001 * salary
+ 0.2 * age
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.01 * test
+ rnorm(nrow(df), mean = 0, sd = 1)
)
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test, data = df %>% filter(age > 24, age < 46)))
pred_mod <- lm(spent ~ ., data = df %>% filter(!test) %>% select(-test, -pred_spent, -user_id))
summary(pred_mod)
df$pred_spent <- predict(pred_mod, df)
with(df %>% filter(!is.na(df$pred_spent)), cor(spent, pred_spent))
summary(lm(spent ~ test, data = df))
summary(lm(spent ~ test + pred_spent, data = df))
summary(lm(spent ~ test + pred_spent, data = df))
summary(lm(spent ~ test + pred_spent, data = df %>% filter(age > 24, age < 46)))
?mvrnorm
library(MASS)
?mvrnorm
mvrnorm(n=5, mu = 100, Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
mvrnorm(n=2, mu = 100, Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
matrix(c(1, 0.8, 0.8, 1), nrow = 2)
mvrnorm(n=2, mu = rep(100, 10), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
mvrnorm(n=5, mu = rep(100, 10), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
mvrnorm(n=10, mu = rep(100, 10), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
mvrnorm(n=100, mu = rep(100, 10), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
Sigma <- matrix(c(10,3,3,2),2,2)
Sigma
var(mvrnorm(n = 1000, rep(0, 2), Sigma))
mvrnorm(n = 1000, rep(0, 2), Sigma)
mvrnorm(n=10, mu = rep(100, 2), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
mvrnorm(n=nrow(df), mu = c(50, 60), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
out <- mvrnorm(n=nrow(df), mu = c(50, 60), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
cor(out)
cov(out)
library(tidyverse)
library(MASS)
###
setwd("~/Downloads/interview-test-final/data")
set.seed(42)
df <- read_csv('final_dataset.csv')
drawer <- function(x) rbinom(length(x), 1, 0.5)
r_draw <- function(x) rnorm(1, mean = 0, sd = 5)
# create test variable with broken randomisation
df$test <- 0
df$test <- with(df, ifelse( (age > 24 & age < 46) | is.na(age), drawer(user_id), 0))
table(df$age, df$test)
# create some random but correlated data:
out <- mvrnorm(n=nrow(df), mu = c(50, 60), Sigma = matrix(c(1, 0.8, 0.8, 1), nrow = 2))
cov(out)
df$age
df$age^2
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.01 * test
+ out[, 2]
)
df
df %>% View
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
df
df %>% View
summary(lm(spent_18 ~ test, data = df))
summary(lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46)))
summary(lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46)))
df$spent_18 <- with(df,
0.001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 10 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
summary(lm(spent_18 ~ test, data = df))
summary(lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46)))
summary(lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46)))
summary(lm(spent_18 ~ test, data = df))
summary(lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46)))
summary(lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46)))
# create some random but correlated data:
out <- mvrnorm(n=nrow(df), mu = c(50, 60), Sigma = matrix(c(1, 0.8, 0.8, 1)*20, nrow = 2))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 10 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
summary(lm(spent_18 ~ test, data = df))
summary(lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46)))
summary(lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46)))
library(texreg)
install.packages('texreg')
library(texreg)
screenreg(
lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
)
?screenreg
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
# create some random but correlated data:
out <- mvrnorm(n=nrow(df), mu = c(50, 60), Sigma = matrix(c(1, 0.8, 0.8, 1)*50, nrow = 2))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 10 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.0001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.0001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 10 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
# create some random but correlated data:
out <- mvrnorm(n=nrow(df), mu = c(50, 60), Sigma = matrix(c(1, 0.8, 0.8, 1)*500, nrow = 2))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.0001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.0001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 10 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
# create some random but correlated data:
out <- mvrnorm(n=nrow(df), mu = c(50, 60), Sigma = matrix(c(1, 0.8, 0.8, 1)*500, nrow = 2))
cor(out)
cov(out)
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.000001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.000001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 5 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.000001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.000001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 0.5 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
# create money spent as a linear combination of salary, age, marital status, gender and test status:
df$spent_17 <- with(df,
0.000001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ out[, 1]
)
df$spent_18 <- with(df,
0.000001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 1 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
df$spent_18 <- with(df,
0.000001 * salary
+ 0.2 * age
- 0.0005 * age^2
+ 0.05 * (`marital-status`=='Never-married')
- 0.05 * (sex=='Female')
+ 1.5 * test
+ out[, 2]
)
df[which(is.na(df$spent_17)), 'spent_17'] <- mean(df$spent_17, na.rm = T)
df[which(is.na(df$spent_18)), 'spent_18'] <- mean(df$spent_18, na.rm = T)
screenreg(
list(lm(spent_18 ~ test, data = df)
, lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
, lm(spent_18 ~ test + spent_17, data = df %>% filter(age > 24, age < 46))
))
?t.test
y_1 <- (df %>% filter(test) %>% select(spent_18))
y_1 <- (df %>% dplyr::filter(test) %>% select(spent_18))
?filter
df$test
y_1 <- (df %>% dplyr::filter(test==1) %>% select(spent_18))
y_1 <- (df %>% dplyr::filter(test==1) %>% dplyr::select(spent_18))
y_1
y_1 <- (df %>% dplyr::filter(test==1))$spent_18
y_0 <- (df %>% dplyr::filter(test==0))$spent_18
t.test(y_0, y_1)
y_1 <- (df %>% dplyr::filter(test==1, age > 24, age < 46))$spent_18
y_0 <- (df %>% dplyr::filter(test==0, age > 24, age < 46))$spent_18
t.test(y_0, y_1)
table(df$test, df$great_customer_class)
df_tst <- df %>% dplyr::filter(age > 24, age < 46)
with(df_tst, table(test, great_customer_class))
?chisq.test()
mat <- with(df_tst, table(test, great_customer_class))
chisq.test(mat)
lm(spent_18 ~ test, data = df %>% filter(age > 24, age < 46))
lm(spent_17 ~ test, data = df %>% filter(age > 24, age < 46))
summary(lm(spent_17 ~ test, data = df %>% filter(age > 24, age < 46)))
df %>% View
?write_csv(df)
getwd()
write_csv(df, 'dataset.csv')
